import 'dart:convert';
import 'package:flutter/foundation.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'cart_item_model.dart';

final cartProvider = StateNotifierProvider<CartNotifier, List<CartItem>>((ref) {
  final notifier = CartNotifier();
  notifier.init(); // –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
  return notifier;
});

class CartNotifier extends StateNotifier<List<CartItem>> {
  CartNotifier() : super([]);

  static const _storageKey = 'cart_items';

  /// üì¶ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
  Future<void> init() async {
    debugPrint('üõí –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã –∏–∑ –ø–∞–º—è—Ç–∏...');
    final prefs = await SharedPreferences.getInstance();
    final jsonString = prefs.getString(_storageKey);
    if (jsonString != null) {
      try {
        final List decoded = jsonDecode(jsonString);
        state = decoded.map((item) => CartItem.fromJson(item)).toList();
        debugPrint('‚úÖ –ö–æ—Ä–∑–∏–Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: ${state.length} —Ç–æ–≤–∞—Ä–æ–≤');
      } catch (e) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã: $e');
        state = [];
        await prefs.remove(_storageKey);
      }
    }
  }

  /// üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ø–∞–º—è—Ç—å
  Future<void> _persist() async {
    final prefs = await SharedPreferences.getInstance();
    final jsonList = state.map((item) => item.toJson()).toList();
    await prefs.setString(_storageKey, jsonEncode(jsonList));
  }

  /// ‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
  void addToCart(CartItem item) {
    final index = state.indexWhere((e) => e.product.id == item.product.id);
    if (index == -1) {
      state = [...state, item];
    } else {
      final updated = [...state];
      updated[index] =
          updated[index].copyWith(quantity: updated[index].quantity + 1);
      state = updated;
    }
    _persist();
  }

  /// ‚ûñ –£–º–µ–Ω—å—à–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
  void decreaseQuantity(String productId) {
    final updated = [...state];
    final index = updated.indexWhere((e) => e.product.id == productId);
    if (index != -1 && updated[index].quantity > 1) {
      updated[index] =
          updated[index].copyWith(quantity: updated[index].quantity - 1);
      state = updated;
    } else {
      removeFromCart(productId);
    }
    _persist();
  }

  /// ‚ûï –£–≤–µ–ª–∏—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
  void increaseQuantity(String productId) {
    final updated = [...state];
    final index = updated.indexWhere((e) => e.product.id == productId);
    if (index != -1) {
      updated[index] =
          updated[index].copyWith(quantity: updated[index].quantity + 1);
      state = updated;
    }
    _persist();
  }

  /// ‚ùå –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä
  void removeFromCart(String productId) {
    state = state.where((e) => e.product.id != productId).toList();
    _persist();
  }

  /// üóë –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É
  void clearCart() {
    state = [];
    _persist();
  }

  /// üí∞ –°—É–º–º–∞ –∑–∞–∫–∞–∑–∞
  double get totalAmount {
    return state.fold(
        0, (sum, item) => sum + item.quantity * item.product.price);
  }
}
